{"ast":null,"code":"var _jsxFileName = \"/home/jumil/Documents/Jumil/Health App/health-app/src/Auth/UserRegistration.js\";\n\n/* eslint-disable jsx-a11y/iframe-has-title */\nimport React, { useState, useEffect } from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Style from './Style/Login';\nimport image from '../Images/background.jpeg';\nconst theme = createMuiTheme({\n  typography: {\n    fontSize: 25\n  }\n});\n\nfunction UserRegistration() {\n  const classes = Style();\n  const [state, setState] = useState({\n    firstName: '',\n    lastName: '',\n    address: '',\n    pincode: '',\n    area: '',\n    district: '',\n    state: '',\n    email: '',\n    phone: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({\n    name: false\n  });\n  const [errorMessage, setErrorMessage] = useState({\n    name: ''\n  });\n  const [stateErrorMessage, setStateErrorMessage] = useState({\n    status: false,\n    message: ''\n  });\n\n  const handleUserRegistration = e => {\n    e.preventDefault();\n  };\n\n  const handleInputChange = async event => {\n    let reg = /^[#\\\\@\\\\$%\\\\^\\\\&*\\\\|\\\\\\\\//.\\]\\\\)\\\\(;:,+\"'_\\\\=!><?\\-\\\\[`~{}]|`~.\\\\\\/_\\]]+$/g;\n    let result = reg.test(event.target.value[event.target.value.length - 1]);\n\n    if (result === false) {\n      if (event.target.value.length > 30) {\n        setErrors({ ...errors,\n          \"name\": true\n        });\n        setErrorMessage({ ...errorMessage,\n          \"name\": \"Maximum 30 characters are allowed\"\n        });\n      } else {\n        const {\n          value,\n          name\n        } = event.target;\n        setState({ ...state,\n          [name]: value.toUpperCase()\n        });\n        setErrors({ ...errors,\n          \"name\": false\n        });\n        setErrorMessage({ ...errorMessage,\n          \"name\": ''\n        });\n      }\n    } else {\n      setErrors({ ...errors,\n        \"name\": true\n      });\n      setErrorMessage({ ...errorMessage,\n        \"name\": \"Special characters are not allowed\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      console.log(\"cleaned up\");\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.menu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: classes.head,\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.mainHead,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Health App\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.subMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.menuItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/\",\n    className: classes.logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.menuItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/login\",\n    className: classes.logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, \"Login\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.loginContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    required: true // error={error}  onSubmit={(e) => { e.preventDefault(); handleSubmit(); } } component=\"fieldset\" className={classes.form}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    id: \"standard-required\",\n    label: \"First Name\",\n    name: \"firstName\",\n    autoComplete: \"off\",\n    onFocus: () => {\n      setErrors({ ...errors,\n        \"name\": false\n      });\n      setErrorMessage({ ...errorMessage,\n        \"name\": \"\"\n      });\n    },\n    error: errors[\"name\"],\n    helperText: errorMessage[\"name\"],\n    autoFocus: true,\n    value: state.firstName,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    id: \"standard-required\",\n    label: \"Last Name\",\n    name: \"lastName\",\n    autoComplete: \"off\",\n    onFocus: () => {\n      setErrors({ ...errors,\n        \"name\": false\n      });\n      setErrorMessage({ ...errorMessage,\n        \"name\": \"\"\n      });\n    },\n    error: errors[\"name\"],\n    helperText: errorMessage[\"name\"],\n    value: state.name,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    id: \"standard-required\",\n    label: \"Address\",\n    name: \"address\",\n    autoComplete: \"off\",\n    onFocus: () => {\n      setErrors({ ...errors,\n        \"name\": false\n      });\n      setErrorMessage({ ...errorMessage,\n        \"name\": \"\"\n      });\n    },\n    error: errors[\"name\"],\n    helperText: errorMessage[\"name\"],\n    value: state.address,\n    onChange: handleInputChange,\n    ii: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    id: \"standard-required\",\n    label: \"Pincode\",\n    name: \"pincode\",\n    autoComplete: \"off\",\n    onFocus: () => {\n      setErrors({ ...errors,\n        \"name\": false\n      });\n      setErrorMessage({ ...errorMessage,\n        \"name\": \"\"\n      });\n    },\n    error: errors[\"name\"],\n    helperText: errorMessage[\"name\"],\n    value: state.name,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    id: \"standard-required\",\n    label: \"Area\",\n    name: \"area\",\n    autoComplete: \"off\",\n    onFocus: () => {\n      setErrors({ ...errors,\n        \"name\": false\n      });\n      setErrorMessage({ ...errorMessage,\n        \"name\": \"\"\n      });\n    },\n    error: errors[\"name\"],\n    helperText: errorMessage[\"name\"],\n    value: state.pincode,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    id: \"standard-required\",\n    label: \"District\",\n    name: \"district\",\n    autoComplete: \"off\",\n    onFocus: () => {\n      setErrors({ ...errors,\n        \"name\": false\n      });\n      setErrorMessage({ ...errorMessage,\n        \"name\": \"\"\n      });\n    },\n    error: errors[\"name\"],\n    helperText: errorMessage[\"name\"],\n    autoFocus: true,\n    value: state.district // onChange={handleInputChange}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    id: \"standard-required\",\n    label: \"State\",\n    name: \"state\",\n    autoComplete: \"off\" // onFocus={()=>{setErrors({...errors,\"name\":false});\n    // setErrorMessage({...errorMessage,\"name\":\"\"})}} \n    // error={errors[\"name\"]}\n    // helperText={errorMessage[\"name\"]}\n    // autoFocus\n    ,\n    value: state.state // onChange={handleInputChange}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    id: \"standard-required\",\n    label: \"Email\",\n    name: \"email\",\n    autoComplete: \"off\" // onFocus={()=>{setErrors({...errors,\"name\":false});\n    // setErrorMessage({...errorMessage,\"name\":\"\"})}} \n    // error={errors[\"name\"]}\n    // helperText={errorMessage[\"name\"]}\n    // autoFocus\n    ,\n    value: state.email // onChange={handleInputChange}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    id: \"standard-required\",\n    label: \"Phone Number\",\n    name: \"phone\",\n    autoComplete: \"off\" // onFocus={()=>{setErrors({...errors,\"name\":false});\n    // setErrorMessage({...errorMessage,\"name\":\"\"})}} \n    // error={errors[\"name\"]}\n    // helperText={errorMessage[\"name\"]}\n    // autoFocus\n    ,\n    value: state.name // onChange={handleInputChange}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    id: \"standard-required\",\n    label: \"Password\",\n    name: \"password\",\n    autoComplete: \"off\",\n    type: \"password\" // onFocus={()=>{setErrors({...errors,\"name\":false});\n    // setErrorMessage({...errorMessage,\"name\":\"\"})}} \n    // error={errors[\"name\"]}\n    // helperText={errorMessage[\"name\"]}\n    // autoFocus\n    ,\n    value: state.password // onChange={handleInputChange}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"red\" // disabled={stateLoading || stageLoading}\n    ,\n    fullWidth: true,\n    id: \"submit\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 29\n    }\n  }, \"Register\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sideImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 25\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    width: \"100%\",\n    height: \"100%\",\n    style: {\n      borderRadius: '1rem',\n      objectFit: 'cover'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 25\n    }\n  }))))));\n}\n\nexport default UserRegistration;","map":{"version":3,"sources":["/home/jumil/Documents/Jumil/Health App/health-app/src/Auth/UserRegistration.js"],"names":["React","useState","useEffect","createMuiTheme","ThemeProvider","TextField","Button","Style","image","theme","typography","fontSize","UserRegistration","classes","state","setState","firstName","lastName","address","pincode","area","district","email","phone","password","errors","setErrors","name","errorMessage","setErrorMessage","stateErrorMessage","setStateErrorMessage","status","message","handleUserRegistration","e","preventDefault","handleInputChange","event","reg","result","test","target","value","length","toUpperCase","console","log","menu","head","mainHead","subMenu","menuItems","logout","container","loginContainer","formButton","submit","sideImage","borderRadius","objectFit"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/iframe-has-title */\nimport React,{useState,useEffect} from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Style from './Style/Login';\nimport image from '../Images/background.jpeg'\n\nconst theme = createMuiTheme({\n    typography: {\n      fontSize: 25,\n    },\n  });\n\n\nfunction UserRegistration() {\n\n  const classes = Style();\n  \n  const [state, setState] = useState({\n                                        firstName:'',\n                                        lastName:'',\n                                        address:'',\n                                        pincode:'',\n                                        area:'',\n                                        district:'',\n                                        state:'',\n                                        email:'',\n                                        phone:'',\n                                        password:''\n                                    })\n    const [errors,setErrors]=useState({name:false});\n    const [errorMessage,setErrorMessage]=useState({name:''});\n    const [stateErrorMessage, setStateErrorMessage] = useState({status:false,message:''});\n\n  const handleUserRegistration = (e) => {\n      e.preventDefault();\n  }\n\n  const handleInputChange = async(event) => {\n    let reg = /^[#\\\\@\\\\$%\\\\^\\\\&*\\\\|\\\\\\\\//.\\]\\\\)\\\\(;:,+\"'_\\\\=!><?\\-\\\\[`~{}]|`~.\\\\\\/_\\]]+$/g;\n    let result = reg.test(event.target.value[event.target.value.length - 1])\n    if(result === false){\n      if(event.target.value.length > 30){\n        setErrors({...errors,\"name\":true})\n        setErrorMessage({...errorMessage,\"name\":\"Maximum 30 characters are allowed\"})\n      } else {\n        const { value, name } = event.target;\n        setState({...state,[name]:value.toUpperCase()});\n        setErrors({...errors,\"name\":false})\n        setErrorMessage({...errorMessage,\"name\":''})\n      }\n    } else {\n      setErrors({...errors,\"name\":true})\n      setErrorMessage({...errorMessage,\"name\":\"Special characters are not allowed\"})\n    }\n}\n\n  useEffect(() => {\n  return () => {\n    console.log(\"cleaned up\");\n  };\n  }, []);\n  return (\n      <div>\n          <ThemeProvider theme={theme}>\n             <React.Fragment>\n                <div className={classes.menu}>\n                <a className={classes.head} href='/'>\n                    <h3 className={classes.mainHead}>Health App</h3>\n                </a>\n                <div className={classes.subMenu}>\n                    <div className={classes.menuItems}>\n                        <a href='/' className={classes.logout}>Home</a>\n                    </div>\n                    <div className={classes.menuItems}>\n                        <a href='/login' className={classes.logout}>Login</a>\n                    </div>\n                </div>\n                </div>\n                <div className={classes.container}>\n                    <div className={classes.loginContainer}>\n                    <form required \n                            // error={error}  onSubmit={(e) => { e.preventDefault(); handleSubmit(); } } component=\"fieldset\" className={classes.form}\n                             >\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id=\"standard-required\"\n                            label=\"First Name\"\n                            name=\"firstName\"\n                            autoComplete=\"off\"\n                            onFocus={()=>{setErrors({...errors,\"name\":false});\n                            setErrorMessage({...errorMessage,\"name\":\"\"})}} \n                            error={errors[\"name\"]}\n                            helperText={errorMessage[\"name\"]}\n                            autoFocus\n                            value={state.firstName}\n                            onChange={handleInputChange}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id=\"standard-required\"\n                            label=\"Last Name\"\n                            name=\"lastName\"\n                            autoComplete=\"off\"\n                            onFocus={()=>{setErrors({...errors,\"name\":false});\n                            setErrorMessage({...errorMessage,\"name\":\"\"})}} \n                            error={errors[\"name\"]}\n                            helperText={errorMessage[\"name\"]}\n                            value={state.name}\n                            onChange={handleInputChange}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id=\"standard-required\"\n                            label=\"Address\"\n                            name=\"address\"\n                            autoComplete=\"off\"\n                            onFocus={()=>{setErrors({...errors,\"name\":false});\n                            setErrorMessage({...errorMessage,\"name\":\"\"})}} \n                            error={errors[\"name\"]}\n                            helperText={errorMessage[\"name\"]}\n                            value={state.address}\n                            onChange={handleInputChange}ii \n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id=\"standard-required\"\n                            label=\"Pincode\"\n                            name=\"pincode\"\n                            autoComplete=\"off\"\n                            onFocus={()=>{setErrors({...errors,\"name\":false});\n                            setErrorMessage({...errorMessage,\"name\":\"\"})}} \n                            error={errors[\"name\"]}\n                            helperText={errorMessage[\"name\"]}\n                            value={state.name}\n                            onChange={handleInputChange}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id=\"standard-required\"\n                            label=\"Area\"\n                            name=\"area\"\n                            autoComplete=\"off\"\n                            onFocus={()=>{setErrors({...errors,\"name\":false});\n                            setErrorMessage({...errorMessage,\"name\":\"\"})}} \n                            error={errors[\"name\"]}\n                            helperText={errorMessage[\"name\"]}\n                            value={state.pincode}\n                            onChange={handleInputChange}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id=\"standard-required\"\n                            label=\"District\"\n                            name=\"district\"\n                            autoComplete=\"off\"\n                            onFocus={()=>{setErrors({...errors,\"name\":false});\n                            setErrorMessage({...errorMessage,\"name\":\"\"})}} \n                            error={errors[\"name\"]}\n                            helperText={errorMessage[\"name\"]}\n                            autoFocus\n                            value={state.district}\n                            // onChange={handleInputChange}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id=\"standard-required\"\n                            label=\"State\"\n                            name=\"state\"\n                            autoComplete=\"off\"\n                            // onFocus={()=>{setErrors({...errors,\"name\":false});\n                            // setErrorMessage({...errorMessage,\"name\":\"\"})}} \n                            // error={errors[\"name\"]}\n                            // helperText={errorMessage[\"name\"]}\n                            // autoFocus\n                            value={state.state}\n                            // onChange={handleInputChange}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id=\"standard-required\"\n                            label=\"Email\"\n                            name=\"email\"\n                            autoComplete=\"off\"\n                            // onFocus={()=>{setErrors({...errors,\"name\":false});\n                            // setErrorMessage({...errorMessage,\"name\":\"\"})}} \n                            // error={errors[\"name\"]}\n                            // helperText={errorMessage[\"name\"]}\n                            // autoFocus\n                            value={state.email}\n                            // onChange={handleInputChange}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id=\"standard-required\"\n                            label=\"Phone Number\"\n                            name=\"phone\"\n                            autoComplete=\"off\"\n                            // onFocus={()=>{setErrors({...errors,\"name\":false});\n                            // setErrorMessage({...errorMessage,\"name\":\"\"})}} \n                            // error={errors[\"name\"]}\n                            // helperText={errorMessage[\"name\"]}\n                            // autoFocus\n                            value={state.name}\n                            // onChange={handleInputChange}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id=\"standard-required\"\n                            label=\"Password\"\n                            name=\"password\"\n                            autoComplete=\"off\"\n                            type=\"password\"\n                            // onFocus={()=>{setErrors({...errors,\"name\":false});\n                            // setErrorMessage({...errorMessage,\"name\":\"\"})}} \n                            // error={errors[\"name\"]}\n                            // helperText={errorMessage[\"name\"]}\n                            // autoFocus\n                            value={state.password}\n                            // onChange={handleInputChange}\n                        />\n                        <div className={classes.formButton}>  \n                            <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"red\"\n                                // disabled={stateLoading || stageLoading}\n                                fullWidth\n                                id='submit'\n                                className={classes.submit}\n                            >\n                                Register\n                            </Button>\n                        </div>\n                        </form>\n                    </div>\n                    <div className={classes.sideImage}>\n                        <h2>Register</h2>\n                        <img src={image} width=\"100%\" height=\"100%\" style={{borderRadius:'1rem',objectFit:'cover'}}/>\n                    </div>\n                </div>\n             </React.Fragment>\n          </ThemeProvider>\n      </div>\n    );\n}\nexport default UserRegistration;\n"]},"metadata":{},"sourceType":"module"}