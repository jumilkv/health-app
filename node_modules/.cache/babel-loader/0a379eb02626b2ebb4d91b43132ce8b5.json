{"ast":null,"code":"var _jsxFileName = \"/home/jumil/Documents/Jumil/Health App/health-app/src/User/UserRequest.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableRow from '@material-ui/core/TableRow';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from 'react-router';\nimport Cookie from \"js-cookie\";\nimport BranchModal from './UserModal';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport PrintIcon from '@material-ui/icons/Print';\nimport IconButton from '@material-ui/core/IconButton';\nimport { parseAsync } from 'json2csv';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport CustomizedSnackbars from './snack';\nimport Modal from 'react-awesome-modal';\nimport AppConstants from '../Utils/AppConstants';\nimport Style from './Style/Useres';\nimport Head from './Head';\nimport { Item } from 'semantic-ui-react';\n\nconst moment = require('moment');\n\nconst token = Cookie.get('token');\nconst theme = createMuiTheme({\n  typography: {\n    fontSize: 25\n  }\n});\n\nfunction Branches(props) {\n  const [rows, setRows] = React.useState([]);\n  const classes = Style();\n  const [url, setUrl] = useState(\"\");\n  const [totalCount, setTotalCount] = useState({\n    status: false,\n    message: ''\n  });\n  const [order, setOrder] = useState('asc');\n  const [orderField, setOrderField] = useState('');\n  const [stageLoading, setStageLoading] = useState(false);\n  const [modalShow, setModalShow] = React.useState(false);\n  const [modalData, setModalData] = React.useState({});\n  const [modalName, setModalName] = React.useState('');\n  const [success, setSuccess] = useState({\n    status: false,\n    message: ''\n  });\n  const [hide, setHide] = useState({\n    print: false\n  });\n  const [orderBy, setOrderBy] = React.useState('');\n  const columns = [{\n    id: 'branch_name',\n    label: 'User Name',\n    minWidth: 170\n  }, {\n    id: 'emp_count',\n    label: 'Email',\n    align: 'left'\n  }, {\n    id: 'emp_count',\n    label: 'Phone',\n    align: 'left'\n  }, {\n    id: 'emp_count',\n    label: 'Address',\n    align: 'left'\n  }, {\n    id: 'emp_count',\n    label: 'Purpose',\n    align: 'left'\n  }, {\n    id: 'emp_count',\n    label: 'Requested On',\n    align: 'left'\n  }, {\n    id: 'emp_count',\n    label: 'Status',\n    align: 'left'\n  }];\n\n  const handleRequestSort = async (event, property, id) => {\n    setOrder(order === 'desc' ? 'asc' : 'desc');\n    setOrderField(id);\n    setOrderBy(property.label);\n  };\n\n  const handleHide = () => {\n    setHide({\n      print: true\n    });\n  };\n\n  const createSortHandler = (property, id) => event => {\n    handleRequestSort(event, property, id);\n  };\n\n  const createdOn = createdDate => {\n    const date = new Date(createdDate).toDateString();\n    const time = new Date(createdDate).toLocaleTimeString();\n    var momentObj = moment(time, [\"h:mm:ss a\"]);\n    return date + ' ' + momentObj.format(\"hh:mm:ss a\");\n  };\n\n  const addOrUpdate = (type, data) => event => {\n    setModalData({});\n\n    if (type === 'edit') {\n      setModalShow(true);\n      setModalData(data);\n      setModalName('Edit ');\n    } else {\n      setModalShow(true);\n      setModalData({});\n      setModalName('Add ');\n    }\n  };\n\n  function downloadText(myData) {\n    const fields = ['branch_name', 'emp_count', 'state_name', 'created_on'];\n    const opts = {\n      fields\n    };\n    myData.filter(item => {\n      item.created_on = moment(item.created_on).format(\"ddd D MMM YYYY, h:mm:ss a\");\n    });\n    parseAsync(myData, opts).then(csv => {\n      var blob = new Blob([csv], {\n        type: 'text/csv;charset=utf-8;'\n      });\n      var url = URL.createObjectURL(blob);\n      setUrl(url);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  const closeModal = async (status, message) => {\n    setModalShow(false);\n    setSuccess({\n      status: false,\n      message: ''\n    });\n    setSuccess({\n      status: status,\n      message: message\n    });\n\n    if (orderField !== '') {} else {}\n  };\n\n  const printMe = () => {\n    if (hide.print == true) {\n      window.frames[\"print_frame\"].document.body.innerHTML = document.getElementsByClassName(classes.root)[0].innerHTML;\n      window.frames[\"print_frame\"].window.print();\n      setHide({\n        print: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    async function fetchData() {}\n\n    fetchData();\n  }, {});\n  useEffect(() => {\n    return () => {\n      console.log(\"cleaned up\");\n    };\n  }, []);\n  useEffect(() => {\n    printMe(hide.print);\n  }, [hide]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }), !stageLoading ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      color: '#7c2333',\n      fontFamily: 'monospace'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 14\n    }\n  }, \"My Requests\"), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tableWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 33\n    }\n  }, columns.map((column, index) => /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.tableHead,\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    sortDirection: orderBy === column.label ? order : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 41\n    }\n  }, column.id == 'branch_name' || column.id == 'created_on' || column.id == 'state_name' || column.id == 'emp_count' ? /*#__PURE__*/React.createElement(TableSortLabel, {\n    direction: order,\n    onClick: createSortHandler(columns[index], column.id),\n    hideSortIcon: hide.print,\n    active: orderBy === column.label && !hide.print,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 47\n    }\n  }, column.label) : column.label)), !hide.print ? /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.tableHead,\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 50\n    }\n  }, AppConstants.ACTION) : '')), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 29\n    }\n  }, rows.map(ro => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      tabIndex: -1,\n      className: classes.rowData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 37\n      }\n    }, columns.map(column => {\n      const value = ro[column.id];\n      return column.id == 'created_on' ? /*#__PURE__*/React.createElement(TableCell, {\n        className: classes.rowData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 45\n        }\n      }, createdOn(value)) : /*#__PURE__*/React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        className: classes.rowData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 44\n        }\n      }, value);\n    }), !hide.print ? /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.tableRowData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: `Edit branch (` + ro.branch_name + `)`,\n      placement: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      className: classes.editIcon,\n      onClick: addOrUpdate('edit', ro),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 49\n      }\n    }))) : '');\n  }))), /*#__PURE__*/React.createElement(\"iframe\", {\n    name: \"print_frame\",\n    width: \"0\",\n    height: \"0\",\n    frameborder: \"0\",\n    src: \"about:blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: addOrUpdate('add', 0),\n    id: \"add\",\n    className: classes.add,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add Branches\",\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    \"aria-label\": \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.butt,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Print list of my requests\",\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    \"aria-label\": \"add\",\n    onClick: () => handleHide(),\n    className: classes.addIcons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(PrintIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"a\", {\n    href: url,\n    download: 'branches.csv',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Download list requests .csv\",\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    className: classes.addIcon,\n    \"aria-label\": \"download\",\n    onClick: () => downloadText(rows),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(GetAppIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 23\n    }\n  })))), success.status ? /*#__PURE__*/React.createElement(CustomizedSnackbars, {\n    message: success.message,\n    variant: \"success\",\n    id: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 35\n    }\n  }) : \"\", modalShow ? /*#__PURE__*/React.createElement(Modal, {\n    visible: modalShow,\n    width: \"950\",\n    height: \"650\",\n    effect: \"fadeInUp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modalMain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modalHead,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.modalTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 29\n    }\n  }, modalName + 'Health Team'), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    onClick: () => closeModal(false, ''),\n    className: classes.cursor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 65\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(BranchModal, {\n    data: modalData,\n    type: modalName,\n    closeModal: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 29\n    }\n  })))) : /*#__PURE__*/React.createElement(React.Fragment, null)) : /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 50,\n    color: \"primary\",\n    className: classes.loadingIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 34\n    }\n  })));\n}\n\nexport default withRouter(Branches);","map":{"version":3,"sources":["/home/jumil/Documents/Jumil/Health App/health-app/src/User/UserRequest.jsx"],"names":["React","useState","useEffect","makeStyles","Paper","Table","TableBody","TableCell","TableHead","TableSortLabel","TableRow","createMuiTheme","ThemeProvider","Link","Tooltip","EditIcon","CloseIcon","CircularProgress","withRouter","Cookie","BranchModal","Fab","AddIcon","PrintIcon","IconButton","parseAsync","GetAppIcon","CustomizedSnackbars","Modal","AppConstants","Style","Head","Item","moment","require","token","get","theme","typography","fontSize","Branches","props","rows","setRows","classes","url","setUrl","totalCount","setTotalCount","status","message","order","setOrder","orderField","setOrderField","stageLoading","setStageLoading","modalShow","setModalShow","modalData","setModalData","modalName","setModalName","success","setSuccess","hide","setHide","print","orderBy","setOrderBy","columns","id","label","minWidth","align","handleRequestSort","event","property","handleHide","createSortHandler","createdOn","createdDate","date","Date","toDateString","time","toLocaleTimeString","momentObj","format","addOrUpdate","type","data","downloadText","myData","fields","opts","filter","item","created_on","then","csv","blob","Blob","URL","createObjectURL","catch","err","console","log","closeModal","printMe","window","frames","document","body","innerHTML","getElementsByClassName","root","fetchData","color","fontFamily","tableWrapper","map","column","index","tableHead","ACTION","ro","rowData","value","tableRowData","branch_name","editIcon","add","butt","addIcons","addIcon","modalMain","modalHead","modalTitle","modalClose","cursor","modal","loadingIcon"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,0BAA9C;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,mBAAP,MAAgC,SAAhC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,IAAT,QAAqB,mBAArB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,KAAK,GAAGhB,MAAM,CAACiB,GAAP,CAAW,OAAX,CAAd;AAEA,MAAMC,KAAK,GAAG1B,cAAc,CAAC;AACzB2B,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAE;AADA;AADa,CAAD,CAA5B;;AAOA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAEvB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAe3C,KAAK,CAACC,QAAN,CAAe,EAAf,CAArB;AACA,QAAM2C,OAAO,GAAGd,KAAK,EAArB;AACA,QAAM,CAACe,GAAD,EAAKC,MAAL,IAAa7C,QAAQ,CAAC,EAAD,CAA3B;AACA,QAAM,CAAC8C,UAAD,EAAYC,aAAZ,IAA6B/C,QAAQ,CAAC;AAACgD,IAAAA,MAAM,EAAC,KAAR;AAAcC,IAAAA,OAAO,EAAC;AAAtB,GAAD,CAA3C;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnD,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACoD,UAAD,EAAaC,aAAb,IAA8BrD,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACsD,YAAD,EAAeC,eAAf,IAAkCvD,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACwD,SAAD,EAAYC,YAAZ,IAA4B1D,KAAK,CAACC,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM,CAAC0D,SAAD,EAAYC,YAAZ,IAA4B5D,KAAK,CAACC,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAAC4D,SAAD,EAAYC,YAAZ,IAA4B9D,KAAK,CAACC,QAAN,CAAe,EAAf,CAAlC;AACA,QAAK,CAAC8D,OAAD,EAASC,UAAT,IAAqB/D,QAAQ,CAAC;AAACgD,IAAAA,MAAM,EAAC,KAAR;AAAcC,IAAAA,OAAO,EAAC;AAAtB,GAAD,CAAlC;AACA,QAAM,CAACe,IAAD,EAAMC,OAAN,IAAejE,QAAQ,CAAC;AAACkE,IAAAA,KAAK,EAAC;AAAP,GAAD,CAA7B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBrE,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B;AACA,QAAMqE,OAAO,GAAG,CACN;AAAEC,IAAAA,EAAE,EAAE,aAAN;AAAqBC,IAAAA,KAAK,EAAE,WAA5B;AAAyCC,IAAAA,QAAQ,EAAE;AAAnD,GADM,EAEN;AAAEF,IAAAA,EAAE,EAAE,WAAN;AAAmBC,IAAAA,KAAK,EAAE,OAA1B;AAAmCE,IAAAA,KAAK,EAAE;AAA1C,GAFM,EAGN;AAAEH,IAAAA,EAAE,EAAE,WAAN;AAAmBC,IAAAA,KAAK,EAAE,OAA1B;AAAmCE,IAAAA,KAAK,EAAE;AAA1C,GAHM,EAIN;AAAEH,IAAAA,EAAE,EAAE,WAAN;AAAmBC,IAAAA,KAAK,EAAE,SAA1B;AAAqCE,IAAAA,KAAK,EAAE;AAA5C,GAJM,EAKN;AAAEH,IAAAA,EAAE,EAAE,WAAN;AAAmBC,IAAAA,KAAK,EAAE,SAA1B;AAAqCE,IAAAA,KAAK,EAAE;AAA5C,GALM,EAMN;AAAEH,IAAAA,EAAE,EAAE,WAAN;AAAmBC,IAAAA,KAAK,EAAE,cAA1B;AAA0CE,IAAAA,KAAK,EAAE;AAAjD,GANM,EAON;AAAEH,IAAAA,EAAE,EAAE,WAAN;AAAmBC,IAAAA,KAAK,EAAE,QAA1B;AAAoCE,IAAAA,KAAK,EAAE;AAA3C,GAPM,CAAhB;;AAUA,QAAMC,iBAAiB,GAAG,OAAMC,KAAN,EAAaC,QAAb,EAAsBN,EAAtB,KAA6B;AACnDnB,IAAAA,QAAQ,CAACD,KAAK,KAAK,MAAV,GAAmB,KAAnB,GAA2B,MAA5B,CAAR;AACAG,IAAAA,aAAa,CAACiB,EAAD,CAAb;AACAF,IAAAA,UAAU,CAACQ,QAAQ,CAACL,KAAV,CAAV;AACH,GAJD;;AAMA,QAAMM,UAAU,GAAC,MAAI;AACjBZ,IAAAA,OAAO,CAAC;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAD,CAAP;AAEH,GAHD;;AAIA,QAAMY,iBAAiB,GAAG,CAACF,QAAD,EAAUN,EAAV,KAAiBK,KAAK,IAAI;AAClDD,IAAAA,iBAAiB,CAACC,KAAD,EAAQC,QAAR,EAAiBN,EAAjB,CAAjB;AACD,GAFD;;AAIA,QAAMS,SAAS,GAAIC,WAAD,IAAiB;AACjC,UAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,WAAT,EAAsBG,YAAtB,EAAb;AACA,UAAMC,IAAI,GAAG,IAAIF,IAAJ,CAASF,WAAT,EAAsBK,kBAAtB,EAAb;AACA,QAAIC,SAAS,GAAGtD,MAAM,CAACoD,IAAD,EAAM,CAAC,WAAD,CAAN,CAAtB;AACA,WAAOH,IAAI,GAAG,GAAP,GAAaK,SAAS,CAACC,MAAV,CAAiB,YAAjB,CAApB;AACD,GALD;;AAOA,QAAMC,WAAW,GAAG,CAACC,IAAD,EAAMC,IAAN,KAAgBf,KAAD,IAAW;AAC5ChB,IAAAA,YAAY,CAAC,EAAD,CAAZ;;AACA,QAAG8B,IAAI,KAAK,MAAZ,EAAmB;AACfhC,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,MAAAA,YAAY,CAAC+B,IAAD,CAAZ;AACA7B,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACH,KAJD,MAIO;AACHJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACH;AACJ,GAXC;;AAaA,WAAS8B,YAAT,CAAsBC,MAAtB,EAA6B;AACzB,UAAMC,MAAM,GAAG,CAAC,aAAD,EAAe,WAAf,EAA2B,YAA3B,EAAyC,YAAzC,CAAf;AACA,UAAMC,IAAI,GAAG;AAAED,MAAAA;AAAF,KAAb;AACCD,IAAAA,MAAM,CAACG,MAAP,CAAcC,IAAI,IAAI;AACrBA,MAAAA,IAAI,CAACC,UAAL,GAAkBjE,MAAM,CAACgE,IAAI,CAACC,UAAN,CAAN,CAAwBV,MAAxB,CAA+B,2BAA/B,CAAlB;AACA,KAFD;AAGD/D,IAAAA,UAAU,CAACoE,MAAD,EAAQE,IAAR,CAAV,CACCI,IADD,CACOC,GAAD,IAAO;AACX,UAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACF,GAAD,CAAT,EAAgB;AAAEV,QAAAA,IAAI,EAAE;AAAR,OAAhB,CAAX;AACA,UAAI7C,GAAG,GAAG0D,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAV;AACAvD,MAAAA,MAAM,CAACD,GAAD,CAAN;AACD,KALD,EAMC4D,KAND,CAMOC,GAAG,IAAE;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,KAN9B;AAOD;;AAEH,QAAMG,UAAU,GAAG,OAAM5D,MAAN,EAAaC,OAAb,KAAyB;AACxCQ,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAM,IAAAA,UAAU,CAAC;AAACf,MAAAA,MAAM,EAAC,KAAR;AAAcC,MAAAA,OAAO,EAAC;AAAtB,KAAD,CAAV;AACAc,IAAAA,UAAU,CAAC;AAACf,MAAAA,MAAM,EAACA,MAAR;AAAeC,MAAAA,OAAO,EAACA;AAAvB,KAAD,CAAV;;AACA,QAAGG,UAAU,KAAK,EAAlB,EAAqB,CACpB,CADD,MACO,CACN;AACJ,GAPD;;AASA,QAAMyD,OAAO,GAAC,MAAI;AAChB,QAAG7C,IAAI,CAACE,KAAL,IAAY,IAAf,EAAoB;AAChB4C,MAAAA,MAAM,CAACC,MAAP,CAAc,aAAd,EAA6BC,QAA7B,CAAsCC,IAAtC,CAA2CC,SAA3C,GAAuDF,QAAQ,CAACG,sBAAT,CAAgCxE,OAAO,CAACyE,IAAxC,EAA8C,CAA9C,EAAiDF,SAAxG;AACAJ,MAAAA,MAAM,CAACC,MAAP,CAAc,aAAd,EAA6BD,MAA7B,CAAoC5C,KAApC;AACAD,MAAAA,OAAO,CAAC;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAD,CAAP;AACH;AACF,GAND;;AAQAjE,EAAAA,SAAS,CAAC,MAAI;AACd,mBAAeoH,SAAf,GAA0B,CACzB;;AACDA,IAAAA,SAAS;AACR,GAJQ,EAIP,EAJO,CAAT;AAMApH,EAAAA,SAAS,CAAC,MAAM;AAChB,WAAO,MAAM;AACXyG,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,KAFD;AAGC,GAJQ,EAIN,EAJM,CAAT;AAMA1G,EAAAA,SAAS,CAAC,MAAI;AACZ4G,IAAAA,OAAO,CAAC7C,IAAI,CAACE,KAAN,CAAP;AACC,GAFM,EAEL,CAACF,IAAD,CAFK,CAAT;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAE5B,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEC,CAACkB,YAAD,gBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,KAAK,EAAE;AAACgE,MAAAA,KAAK,EAAC,SAAP;AAAkBC,MAAAA,UAAU,EAAC;AAA7B,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,eAEG,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE5E,OAAO,CAACyE,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEzE,OAAO,CAAC6E,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,YAAY,MAAnB;AAAqB,kBAAW,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnD,OAAO,CAACoD,GAAR,CAAY,CAACC,MAAD,EAAQC,KAAR,kBACT,oBAAC,SAAD;AACI,IAAA,SAAS,EAAEhF,OAAO,CAACiF,SADvB;AAEI,IAAA,GAAG,EAAEF,MAAM,CAACpD,EAFhB;AAGI,IAAA,KAAK,EAAEoD,MAAM,CAACjD,KAHlB;AAII,IAAA,KAAK,EAAE;AAAED,MAAAA,QAAQ,EAAEkD,MAAM,CAAClD;AAAnB,KAJX;AAKI,IAAA,aAAa,EAAEL,OAAO,KAAKuD,MAAM,CAACnD,KAAnB,GAA2BrB,KAA3B,GAAmC,KALtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGwE,MAAM,CAACpD,EAAP,IAAa,aAAb,IAA8BoD,MAAM,CAACpD,EAAP,IAAY,YAA1C,IAA0DoD,MAAM,CAACpD,EAAP,IAAY,YAAtE,IAAsFoD,MAAM,CAACpD,EAAP,IAAa,WAAnG,gBACG,oBAAC,cAAD;AACI,IAAA,SAAS,EAAEpB,KADf;AAEI,IAAA,OAAO,EAAE4B,iBAAiB,CAACT,OAAO,CAACsD,KAAD,CAAR,EAAgBD,MAAM,CAACpD,EAAvB,CAF9B;AAGI,IAAA,YAAY,EAAEN,IAAI,CAACE,KAHvB;AAII,IAAA,MAAM,EAAEC,OAAO,KAAKuD,MAAM,CAACnD,KAAnB,IAA4B,CAACP,IAAI,CAACE,KAJ9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKwD,MAAM,CAACnD,KANZ,CADH,GASGmD,MAAM,CAACnD,KAhBb,CADH,CADL,EAuBK,CAACP,IAAI,CAACE,KAAN,gBAAY,oBAAC,SAAD;AAAY,IAAA,SAAS,EAAEvB,OAAO,CAACiF,SAA/B;AAA0C,IAAA,KAAK,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwDhG,YAAY,CAACiG,MAArE,CAAZ,GAAqG,EAvB1G,CADJ,CADJ,eA4BI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIpF,IAAI,CAACgF,GAAL,CAASK,EAAE,IAAG;AACd,wBACI,oBAAC,QAAD;AAAU,MAAA,KAAK,MAAf;AAAiB,MAAA,QAAQ,EAAE,CAAC,CAA5B;AAA+B,MAAA,SAAS,EAAEnF,OAAO,CAACoF,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC1D,OAAO,CAACoD,GAAR,CAAYC,MAAM,IAAI;AACtB,YAAMM,KAAK,GAAGF,EAAE,CAACJ,MAAM,CAACpD,EAAR,CAAhB;AACD,aACMoD,MAAM,CAACpD,EAAP,IAAW,YAAX,gBACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAE3B,OAAO,CAACoF,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGhD,SAAS,CAACiD,KAAD,CADZ,CADF,gBAIC,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAEN,MAAM,CAACpD,EAAvB;AAA2B,QAAA,KAAK,EAAEoD,MAAM,CAACjD,KAAzC;AAAgD,QAAA,SAAS,EAAE9B,OAAO,CAACoF,OAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIC,KADJ,CALP;AASC,KAXA,CADD,EAaC,CAAChE,IAAI,CAACE,KAAN,gBACK,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEvB,OAAO,CAACsF,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAG,eAAD,GAAgBH,EAAE,CAACI,WAAnB,GAAgC,GAAhD;AAAoD,MAAA,SAAS,EAAC,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAW,MAAA,SAAS,EAAEvF,OAAO,CAACwF,QAA9B;AAAwC,MAAA,OAAO,EAAE3C,WAAW,CAAC,MAAD,EAAQsC,EAAR,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADF,CADL,GAMA,EAnBD,CADJ;AAuBC,GAxBD,CAFJ,CA5BJ,CADJ,eA0DI;AAAQ,IAAA,IAAI,EAAC,aAAb;AAA2B,IAAA,KAAK,EAAC,GAAjC;AAAqC,IAAA,MAAM,EAAC,GAA5C;AAAgD,IAAA,WAAW,EAAC,GAA5D;AAAgE,IAAA,GAAG,EAAC,aAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1DJ,CADJ,CAFH,eAiEG;AAAK,IAAA,OAAO,EAAEtC,WAAW,CAAC,KAAD,EAAO,CAAP,CAAzB;AAAoC,IAAA,EAAE,EAAC,KAAvC;AAA6C,IAAA,SAAS,EAAE7C,OAAO,CAACyF,GAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,cAAf;AAA8B,IAAA,SAAS,EAAC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAM,kBAAW,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACI,IAAA,SAAS,EAAEzF,OAAO,CAAC0F,IADvB;AAEI,IAAA,OAAO,EAAC,WAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIM,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJN,CADF,CADJ,CADA,CAjEH,eA6EG,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,2BAAf;AAA2C,IAAA,SAAS,EAAC,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAM,kBAAW,KAAjB;AAAuB,IAAA,OAAO,EAAE,MAAIxD,UAAU,EAA9C;AAAkD,IAAA,SAAS,EAAElC,OAAO,CAAC2F,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,CADF,CA7EH,eAkFK;AAAG,IAAA,IAAI,EAAE1F,GAAT;AAAc,IAAA,QAAQ,EAAE,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,6BAAf;AAA6C,IAAA,SAAS,EAAC,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AACI,IAAA,SAAS,EAAED,OAAO,CAAC4F,OADvB;AAEI,kBAAW,UAFf;AAGI,IAAA,OAAO,EAAE,MAAI5C,YAAY,CAAClD,IAAD,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADA,CAlFL,EA6FMqB,OAAO,CAACd,MAAR,gBAAe,oBAAC,mBAAD;AAAqB,IAAA,OAAO,EAAEc,OAAO,CAACb,OAAtC;AAA+C,IAAA,OAAO,EAAC,SAAvD;AAAiE,IAAA,EAAE,EAAC,cAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,GAAoG,EA7F1G,EA8FMO,SAAS,gBACZ,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,SAAhB;AAA4B,IAAA,KAAK,EAAC,KAAlC;AAAwC,IAAA,MAAM,EAAC,KAA/C;AAAqD,IAAA,MAAM,EAAC,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEb,OAAO,CAAC6F,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE7F,OAAO,CAAC8F,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAE9F,OAAO,CAAC+F,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoC9E,SAAS,GAAG,aAAhD,CADJ,eAEI;AAAK,IAAA,SAAS,EAAEjB,OAAO,CAACgG,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAoC,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAE,MAAM/B,UAAU,CAAC,KAAD,EAAO,EAAP,CAApC;AAAgD,IAAA,SAAS,EAAEjE,OAAO,CAACiG,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApC,CAFJ,CADJ,eAKI;AAAK,IAAA,SAAS,EAAEjG,OAAO,CAACkG,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEnF,SAAnB;AAA8B,IAAA,IAAI,EAAEE,SAApC;AAA+C,IAAA,UAAU,EAAEgD,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CADJ,CADY,gBAYT,yCA1GN,CADF,gBA4GsB,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAE,EAAxB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,SAAS,EAAEjE,OAAO,CAACmG,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9GvB,CADJ,CADJ;AAqHD;;AACD,eAAe7H,UAAU,CAACsB,QAAD,CAAzB","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableRow from '@material-ui/core/TableRow';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport {Link} from 'react-router-dom';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {withRouter} from 'react-router';\nimport Cookie from \"js-cookie\";\nimport BranchModal from './UserModal';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport PrintIcon from '@material-ui/icons/Print';\nimport IconButton from '@material-ui/core/IconButton'\nimport { parseAsync } from 'json2csv';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport CustomizedSnackbars from './snack';\nimport Modal from 'react-awesome-modal';\nimport AppConstants from '../Utils/AppConstants';\nimport Style from './Style/Useres';\nimport Head from './Head';\nimport { Item } from 'semantic-ui-react';\nconst moment = require('moment');\nconst token = Cookie.get('token');\n\nconst theme = createMuiTheme({\n    typography: {\n      fontSize: 25,\n    },\n  });\n\n\nfunction Branches(props) {\n\n  const [rows,setRows]=React.useState([]);\n  const classes = Style();\n  const [url,setUrl]=useState(\"\");\n  const [totalCount,setTotalCount] = useState({status:false,message:''})\n  const [order, setOrder] = useState('asc');\n  const [orderField, setOrderField] = useState('');\n  const [stageLoading, setStageLoading] = useState(false);\n  const [modalShow, setModalShow] = React.useState(false);\n  const [modalData, setModalData] = React.useState({});\n  const [modalName, setModalName] = React.useState('');\n  const[success,setSuccess]=useState({status:false,message:''})\n  const [hide,setHide]=useState({print:false})\n  const [orderBy, setOrderBy] = React.useState('');\n  const columns = [\n            { id: 'branch_name', label: 'User Name', minWidth: 170 },\n            { id: 'emp_count', label: 'Email', align: 'left' },\n            { id: 'emp_count', label: 'Phone', align: 'left' },\n            { id: 'emp_count', label: 'Address', align: 'left' },\n            { id: 'emp_count', label: 'Purpose', align: 'left' },\n            { id: 'emp_count', label: 'Requested On', align: 'left' },\n            { id: 'emp_count', label: 'Status', align: 'left' },\n  ];\n  \n  const handleRequestSort = async(event, property,id) => {\n      setOrder(order === 'desc' ? 'asc' : 'desc');\n      setOrderField(id);\n      setOrderBy(property.label);\n  };\n\n  const handleHide=()=>{\n      setHide({print:true})\n    \n  }\n  const createSortHandler = (property,id) => event => {\n    handleRequestSort(event, property,id);\n  };\n\n  const createdOn = (createdDate) => {\n    const date = new Date(createdDate).toDateString();\n    const time = new Date(createdDate).toLocaleTimeString();\n    var momentObj = moment(time,[\"h:mm:ss a\"])\n    return date + ' ' + momentObj.format(\"hh:mm:ss a\");\n  }\n\n  const addOrUpdate = (type,data) => (event) => {\n    setModalData({});\n    if(type === 'edit'){\n        setModalShow(true)\n        setModalData(data);\n        setModalName('Edit ')\n    } else {\n        setModalShow(true)\n        setModalData({});\n        setModalName('Add ')\n    }\n}\n\n  function downloadText(myData){\n      const fields = ['branch_name','emp_count','state_name', 'created_on'];\n      const opts = { fields };\n       myData.filter(item => {\n        item.created_on = moment(item.created_on).format(\"ddd D MMM YYYY, h:mm:ss a\");\n       });\n      parseAsync(myData,opts)\n      .then((csv)=>{\n        var blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n        var url = URL.createObjectURL(blob);\n        setUrl(url)\n      })\n      .catch(err=>{console.log(err)})\n    }\n\n  const closeModal = async(status,message) => {\n      setModalShow(false);\n      setSuccess({status:false,message:''})\n      setSuccess({status:status,message:message})\n      if(orderField !== ''){\n      } else {\n      }\n  }\n\n  const printMe=()=>{\n    if(hide.print==true){\n        window.frames[\"print_frame\"].document.body.innerHTML = document.getElementsByClassName(classes.root)[0].innerHTML;\n        window.frames[\"print_frame\"].window.print();\n        setHide({print:false})\n    }\n  }\n\n  useEffect(()=>{\n  async function fetchData(){\n  }\n  fetchData()\n  },{})\n  \n  useEffect(() => {\n  return () => {\n    console.log(\"cleaned up\");\n  };\n  }, []);\n  \n  useEffect(()=>{\n    printMe(hide.print)\n    },[hide])\n\n  return (\n      <div>\n          <ThemeProvider theme={theme}>\n          <Head/>\n          {!stageLoading?\n             <React.Fragment>\n             <h2 style={{color:'#7c2333', fontFamily:'monospace'}}>My Requests</h2>\n                <Paper className={classes.root} >\n                    <div className={classes.tableWrapper}>\n                        <Table stickyHeader  aria-label=\"sticky table\">\n                            <TableHead  >\n                                <TableRow>\n                                    {columns.map((column,index) => (\n                                        <TableCell\n                                            className={classes.tableHead}\n                                            key={column.id}\n                                            align={column.align}\n                                            style={{ minWidth: column.minWidth }}\n                                            sortDirection={orderBy === column.label ? order : false}\n                                        > \n                                          {column.id == 'branch_name' || column.id =='created_on' || column.id =='state_name' || column.id == 'emp_count'?  \n                                              <TableSortLabel\n                                                  direction={order}\n                                                  onClick={createSortHandler(columns[index],column.id)}\n                                                  hideSortIcon={hide.print}\n                                                  active={orderBy === column.label && !hide.print}\n                                                >\n                                                  {column.label}\n                                              </TableSortLabel> \n                                             :column.label\n                                          }\n                                        </TableCell>\n                                        )\n                                    )}\n                                    {!hide.print?<TableCell  className={classes.tableHead} align='left'>{AppConstants.ACTION}</TableCell>:''}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                rows.map(ro=> {\n                                return (\n                                    <TableRow hover  tabIndex={-1} className={classes.rowData} >\n                                    {columns.map(column => {\n                                     const value = ro[column.id];\n                                    return (\n                                          column.id=='created_on'?\n                                            <TableCell className={classes.rowData}>\n                                              {createdOn(value)}\n                                            </TableCell>\n                                          :<TableCell key={column.id} align={column.align} className={classes.rowData}>\n                                              {value}\n                                          </TableCell>\n                                    );\n                                    })}\n                                    {!hide.print?\n                                          <TableCell className={classes.tableRowData}>\n                                            <Tooltip title={`Edit branch (`+ro.branch_name+`)`} placement=\"right\">\n                                                <EditIcon  className={classes.editIcon} onClick={addOrUpdate('edit',ro)}/>                                             \n                                            </Tooltip>\n                                          </TableCell>\n                                    :''}\n                                    </TableRow>\n                                );\n                                })}\n                            </TableBody>\n                        </Table>\n                        <iframe name=\"print_frame\" width=\"0\" height=\"0\" frameborder=\"0\" src=\"about:blank\"></iframe>\n                    </div>\n                </Paper>\n\n                <div onClick={addOrUpdate('add',0)} id='add' className={classes.add}>\n                <Tooltip title=\"Add Branches\" placement=\"top\">\n                    <Fab  aria-label=\"add\" >\n                      <IconButton \n                          className={classes.butt}\n                          variant=\"contained\"\n                          >\n                            <AddIcon/>\n                      </IconButton>\n                    </Fab>\n                </Tooltip>\n                </div>\n                <Tooltip title=\"Print list of my requests\" placement=\"top\">\n                  <Fab  aria-label=\"add\" onClick={()=>handleHide()} className={classes.addIcons}>\n                        <PrintIcon />\n                  </Fab>\n                  </Tooltip>\n                  <a href={url} download={'branches.csv'}>\n                  <Tooltip title=\"Download list requests .csv\" placement=\"top\">\n                    <Fab\n                        className={classes.addIcon}\n                        aria-label=\"download\"\n                        onClick={()=>downloadText(rows)}\n                        >\n                      <GetAppIcon />\n                    </Fab>\n                  </Tooltip>\n                  </a>     \n                  {success.status?<CustomizedSnackbars message={success.message} variant='success' id='errorMessage'/>:\"\"}\n                  {modalShow?(\n                <Modal visible={modalShow}  width=\"950\" height=\"650\" effect=\"fadeInUp\">\n                    <div className={classes.modalMain} >\n                        <div className={classes.modalHead}>\n                            <h3 className={classes.modalTitle}>{modalName + 'Health Team'}</h3>\n                            <div className={classes.modalClose}><CloseIcon onClick={() => closeModal(false,'')} className={classes.cursor}/></div>\n                        </div>\n                        <div className={classes.modal} >\n                            <BranchModal data={modalData} type={modalName} closeModal={closeModal}/>\n                        </div>\n                    </div>\n                </Modal>\n                ):(<></>)} \n              </React.Fragment>: <CircularProgress size={50} color=\"primary\" className={classes.loadingIcon} />\n              }    \n          </ThemeProvider>\n      </div>\n    );\n}\nexport default withRouter(Branches)"]},"metadata":{},"sourceType":"module"}